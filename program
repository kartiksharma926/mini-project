#include<stdio.h>
#include<string.h>
#include<stdlib.h>
int main()
{
  char a[10],ad[10],lab[10],opc[10],oper[10],symbol[10],ch,inp[15],ab[15],
  addre[20][20]={"LOAD","STORE","LOADCH","STORECH","ADDITION","SUBTRACTION","MULTIPLICATION","DIVISION","J","JSUBTRCTION"},
  code[20][20]={"00","0C","50","54","28","29","3A","3B","3E","3F"};
  int st,diff,diff1,i,address,address1,add,len,alen,final,pre,j=0,loc=0,start,l,c=0,k=0,bol=0,bad=1,temp;
  FILE *fp1,*fp2,*fp3,*fp4;
  int abu,jan;

    printf("\t\t\tPRESS 1 FOR THE MAIN PROJECT :-\n\t\t\tPRESS 2 FOR INTRODUCTION :-\n");
  scanf("%d",&abu);

  switch(abu)
{
   ma:
  case 1:
  while(bad==1)
  {
start:
  printf("\n\nENTER THE FILE NAME  : \n\n");
  scanf("%s",&inp);
  fp1 = fopen("jatin.txt","w");
  fp3 = fopen(inp,"r");
  if(fp3==NULL)
  {
      printf("\t\nFILE DOES NOT EXIST\n\t");
      printf("\t press 0 to exit\t \n\t press 1 to re-enter the file name \t");
      scanf("%d",&bad);
      if(bad==0)
      {
          exit(1);
      }
      else
      {
          goto start;
      }
  }
  else{
  printf("\n\n\t\t\tINPUT FILE:\n\n");
  ch=fgetc(fp3);
  do
  {
   printf("%c",ch);
   ch=fgetc(fp3);
  }while(ch!=EOF);
  rewind(fp3);
  printf("\n\n\nPASS 1 \n\n\n");
  fp2=fopen("SYMTAB.txt","w");
  fscanf(fp3,"\n\n\n\n%s%s%s%X",lab,opc,oper,&address);
  if(strcmp(oper,"START")!=0)
        loc=0;

    else
    {
            start=address;
            loc=start;
            pre=loc;
            c=address;
        fprintf(fp1,"%s\t%s\t%X\n",opc,oper,address);
    }
    fscanf(fp3,"\n\n\n\n%s%s%s",lab,opc,oper);
while(strcmp(opc,"END")!=0)
  {
      if(strcmp(lab,"--")!=0)
        fprintf(fp2,"%s\t%X\n",lab,loc);


            if(strcmp(opc,"RESB")==0)
           {
                fprintf(fp1,"%X\t%s\t%s\t%s\n",address,lab,opc,oper);
                address+=(atoi(oper));
                loc+=(atoi(oper));
           }
              else if (strcmp(opc,"RESW")==0||strcmp(opc,"WORD")==0)
    {
        fprintf(fp1,"%X\t%s\t%s\t%s\n",address,lab,opc,oper);
        address+=(3*(atoi(oper)));
         loc+=(3*(atoi(oper)));
    }
           else if(strcmp(opc,"BYTE")==0)
            {
                fprintf(fp1,"%X\t%s\t%s\t%s\t\n",address,lab,opc,oper);
                len=strlen(oper);
                address+=len-3;
                loc+=len-3;
            }

   else if(strcmp(opc,"LOAD")==0||strcmp(opc,"STORE")==0||strcmp(opc,"J")==0||strcmp(opc,"JSUBTRACTION")==0||strcmp(opc,"ADDITION")==0||strcmp(opc,"SUBTRACTION")==0||strcmp(opc,"LOADCH")==0||strcmp(opc,"STORECH")==0||strcmp(opc,"MULTIPLICATION")==0||strcmp(opc,"DIVISION")==0)
   {
      fprintf(fp1,"%X\t%s\t%s\t%s\n",address,lab,opc,oper);
       address+=3;
       loc+=3;
   }
   else
   {    printf("\n\t\t ERROR \t\t\n");
       printf("\n\n\n INPUT FILE DOES NOT MATCH WITH THE MNEMOIC USED...INVALID INPUT FILE\n\n\n");
        printf("\n\n\n\t press 0 to exit \n press 1 to re-enter the file name \t");
        scanf("%d",&temp);
        if(temp==0)
       exit(1);
       else if(temp==1)
            goto start;
   }
   fscanf(fp3,"\n\n\n\n%s%s%s",lab,opc,oper);
  }
  fprintf(fp1,"%X\t%s\t%s\t%s\n",address,lab,opc,oper);
  l=address;
  fclose(fp1);
  fclose(fp2);
  fclose(fp3);
    printf("\nAFTER ADRESSING \n\t");
  fp1=fopen("jatin.txt","r");
  ch=fgetc(fp1);
  while(ch!=EOF)
  {
   printf("%c",ch);
   ch=fgetc(fp1);
  }
  fclose(fp1);
  printf("\n\nTHE LENGTH IS : %X",l-c);
  printf("\n\tSYMBOL TABLE :\n");
  fp2=fopen("SYMTAB.txt","r");
  ch=fgetc(fp2);
  while(ch!=EOF)
  {
   printf("%c",ch);
   ch=fgetc(fp2);
  }
fclose(fp2);
printf("\nPASS 2\n ");
 fp1 = fopen("OUTPUT.txt","w");
  fp2 = fopen("SYMTAB.txt","r");
  fp3 = fopen("jatin.txt","r");
  fp4 = fopen("OBJCODE.txt","w");
  fscanf(fp3,"%s%s%s",lab,opc,oper);
  while(strcmp(opc,"END")!=0)
  {
   pre=address;
   fscanf(fp3,"\n\n\n\n%X%s%s%s",&address,lab,opc,oper);
  }

  final=address;
  fclose(fp3);

 fp3=fopen("jatin.txt","r");

  fscanf(fp3,"\n\n\n\n%s%s%s",lab,opc,oper);
  if(strcmp(opc,"START")==0)
  {
   fprintf(fp1,"\t%s\t%s\t%s\n",lab,opc,oper);
   fprintf(fp4,"H^%s^00%s^0000%X\n",lab,oper,final-start);
   fscanf(fp3,"%X%s%s%s",&address,lab,opc,oper);
   st=address;
   diff=pre-st;
    fprintf(fp4,"T^00%X^%X",address,diff);
  }
  while(strcmp(opc,"END")!=0)
  {
   if(strcmp(opc,"BYTE")==0)
   {
    fprintf(fp1,"%X\t%s\t%s\t%s\t",address,lab,opc,oper);
    len=strlen(oper);
    alen=len-3;
    fprintf(fp4,"^");
    for(i=2;i<(alen+2);i++)
    {
     itoa(oper[i],ad,16);
     fprintf(fp1,"%s",ad);
     fprintf(fp4,"%s",ad);
    }
    fprintf(fp1,"\n");
   }
   else if(strcmp(opc,"WORD")==0)
   {
    len=strlen(oper);
    itoa(atoi(oper),a,10);
    fprintf(fp1,"%X\t%s\t%s\t%s\t00000%s\n",address,lab,opc,oper,a);
    fprintf(fp4,"^00000%s",a);
   }
   else if((strcmp(opc,"RESB")==0)||(strcmp(opc,"RESW")==0))
    fprintf(fp1,"%X\t%s\t%s\t%s\n",address,lab,opc,oper);
   else
   {
    while(strcmp(opc,addre[j])!=0)
     j++;
    if(strcmp(oper,"COPY")==0)
     fprintf(fp1,"%X\t%s\t%s\t%s\t%s0000\n",address,lab,opc,oper,code[j]);
    else
    {
     rewind(fp2);
     fscanf(fp2,"%s%X",symbol,&add);
      while(strcmp(oper,symbol)!=0)
       fscanf(fp2,"\n\n\n\n%s%X",symbol,&add);
     fprintf(fp1,"%X\t%s\t%s\t%s\t%s%X\n",address,lab,opc,oper,code[j],add);
     fprintf(fp4,"^%s%X",code[j],add);
    }
   }
   fscanf(fp3,"\n\n\n\n%X%s%s%s",&address,lab,opc,oper);
  }
  fprintf(fp1,"%X\t%s\t%s\t%s\n",address,lab,opc,oper);
  fprintf(fp4,"\nE^00%X",st);
  fclose(fp1);
  fclose(fp2);
  fclose(fp3);
  fclose(fp4);
  printf("\n\n\t\tOUTPUT\n\n\n\n");
  fp1=fopen("OUTPUT.txt","r");
  ch=fgetc(fp1);
  do
  {
   printf("%c",ch);
   ch=fgetc(fp1);
  }while(ch!=EOF);
   printf("\n\n\t\tOBJECT\n\n\n\n");
  fp4=fopen("OBJCODE.txt","r");
  ch=fgetc(fp4);
  do
  {
   printf("%c",ch);
   ch=fgetc(fp4);
  }while(ch!=EOF);
  fclose(fp1);
  fclose(fp3);
  fclose(fp4);
  }
printf("\n\n\n\t press 0 to exit \n press 1 to re-enter the file name \t");
      scanf("%d",&bad);
      if(bad==0)
      {
          exit(1);
      }

}

case 2:
printf("\t\t\n\nTHIS IS A HYPOTHETICAL MACHINE WHICH WE HAVE DESIGNED USING DIFFERENT MNEMONICS.\nTHE MACHINE CAN CONVERT THE ASSEMBLY LANGUAGE INTO THE MACHINE CODE.\nIT USES THE OBJECT PROGRAM STORED PRG.TXT AND IT LOADS THE FILE IN MEMORY\t\t");
printf("\n\t\t\tMAIN PROJECT IS AS FOLLOWS\t\t\n");
}

goto ma;
}



